#+STARTUP: noindent showeverything
#+OPTIONS: toc:nil; html-postamble:nil
#+BEGIN_HTML
---
layout: post
title: Better Zotero file management
categories:
    - Zotero
    - reference-management
---
#+END_HTML


In this post I'm detailing my Zotero setup. It took me a while to figure out all the pieces and I figured describing my configuration might be helpful to someone else.

#+BEGIN_HTML
<!-- more -->
#+END_HTML

* Why isn't the default Zotero setup good enough?

The main issue is the way files that are attached to Zotero entries get stored. In the default setup, Zotero saves the PDF (and other) documents in the Firefox profile directory. The [[https://www.zotero.org/support/zotero_data][path]] to your library (on Linux) looks like this:

#+BEGIN_SRC
~/.mozilla/firefox/Profiles/<randomstring>/zotero 
#+END_SRC

I find this very impractical. But it gets worse: Even knowing this path, it is impossible to predict where a specific file will be stored, as Zotero creates seemingly random subdirectories in which the files are stored, using cryptic file names. This makes locating Zotero attachements in the file system unnecessarily hard. 


* Zotfile to the rescue!

[[http://zotfile.com/][Zotfile]], written by Joscha Legewie, is a plug-in for Zotero that is able to address almost every issue I have with Zotero. Get it [[http://zotfile.com/][here]] and consider supporting the developer if you find the tool as useful as I do.


** Renaming & Relocating with Zotfile

Renaming and relocating the attachments is easy using Zotfile. Open the Zotfile preferences in Zotero (located right under the stanrad preferences) and define your location and renaming rules. Combing the <a href="">default wildcards</a> you can get pretty nice results already.


** Document type specific renaming and storing with custom wildcards

However, if you would like document type specific renaming and relocating rules you have to resort to writing your own wildcards. Here's two things I wanted to do:

- I would like custom folder names for the specific documents. Instead of sorting journal article type documents into "Journal Articles" I'd rather have them in a folder "articles". 

- Similarly, for the document type manuscript I'd like to rename them to ~AuthorYear_Title~. 

This is exactly what the two following wildcards achieve:

#+BEGIN_SRC json
{
    "3": {
        "default": {},
        "manuscript": {
            "field": "title",
            "operations": [
                {
                    "function": "replace",
                    "regex": " ",
                    "replacement": "-"
                },
                {
                    "function": "replace",
                    "regex": "^(.*)$",
                    "replacement": "_$1"
                }
            ]
        },
        "book": {
            "field": "title",
            "operations": [
                {
                    "function": "replace",
                    "regex": " ",
                    "replacement": "-"
                },
                {
                    "function": "replace",
                    "regex": "^(.*)$",
                    "replacement": "_$1"
                }
            ]
        },
        "report": {
            "field": "title",
            "operations": [
                {
                    "function": "replace",
                    "regex": " ",
                    "replacement": "_"
                },
                {
                    "function": "toLowerCase"
                }
            ]
        }
    },
    "4": {
        "default": {
            "field": "itemType",
            "operations": [
                {
                    "function": "replace",
                    "regex": "Journal Article",
                    "replacement": "articles"
                },
                {
                    "function": "replace",
                    "regex": "^Book$",
                    "replacement": "books"
                },
                {
                    "function": "replace",
                    "regex": "Manuscript",
                    "replacement": "manuscripts"
                },
                {
                    "function": "replace",
                    "regex": "^Book Section$",
                    "replacement": "book_sections"
                },
                {
                    "function": "replace",
                    "regex": "Document",
                    "replacement": "documents"
                },
                {
                    "function": "replace",
                    "regex": "Thesis",
                    "replacement": "thesis"
                },
                {
                    "function": "replace",
                    "regex": "Presentation",
                    "replacement": "presentations"
                }
            ]
        },
        "report": {
            "field": "extra"
        }
    }
}
#+END_SRC

Here, ~%3~ is for the renaming while ~%4~ handles the relocating. 

If you're defining wildcards yourself, or want to use the one above, you should first <a href="">validate the JSON</a> and then convert it to a <a href="">single line of code</a>.

Here's screenshots of my Zotfile settings:



* Syncing across multiple machines

Setting up Zotero in this way allows you to easily synchronize your Zotero library across multiple machines. All you need to do is:

1. Synchronize your library directory (the one you specified in Zotfile), for example via Dropbox or ownCloud.
2. Synchronize your Zotero profile via the service provided within Zotero (you have to create an account).
3. IMPORTANT! In the Zotero settings, set the file paths to relative.
  


* Easily sharing papers

Another very helpful feature that Zotfile provides is exporting the pdfs attached to a collection or selection within Zotero. This specifically helpful when you need to share papers with others and just need the pdfs of these three items in Zotero.

To do this, set up the "Send to Tablet" functionality. You don't need to send it to a tablet. All it really does is copy selected pdfs to a folder specified by you. 


* A final step for LaTeX enthusiasts

If you're using Bibtex to generate your bibliographies, there's one more thing you can do. 

With this, articles become available to you for citation the moment you add them to Zotero library. 












#+BEGIN_SRC json
{"3":{"default":{},"manuscript":{"field":"title","operations":[{"function":"replace","regex":" ","replacement":"-"},{"function":"replace","regex":"^(.*)$","replacement":"_$1"}]},"book":{"field":"title","operations":[{"function":"replace","regex":" ","replacement":"-"},{"function":"replace","regex":"^(.*)$","replacement":"_$1"}]},"report":{"field":"title","operations":[{"function":"replace","regex":" ","replacement":"_"},{"function":"toLowerCase"}]}},"4":{"default":{"field":"itemType","operations":[{"function":"replace","regex":"Journal Article","replacement":"articles"},{"function":"replace","regex":"^Book$","replacement":"books"},{"function":"replace","regex":"Manuscript","replacement":"manuscripts"},{"function":"replace","regex":"^Book Section$","replacement":"book_sections"},{"function":"replace","regex":"Document","replacement":"documents"},{"function":"replace","regex":"Thesis","replacement":"thesis"},{"function":"replace","regex":"Presentation","replacement":"presentations"}]},"report":{"field":"extra"}}}
#+END_SRC
