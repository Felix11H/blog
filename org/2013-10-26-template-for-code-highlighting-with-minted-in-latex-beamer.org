#+BEGIN_HTML
---
layout: post
title: Template for code highlighting with minted in LaTeX beamer
permalink: latex-beamer-minted
date: 2013-10-26
type: post
published: true
status: publish
categories:
- LaTeX
tags:
- Beamer
- tools
- LaTeX
---
#+END_HTML

Syntax highlighting can be achieved in LaTeX via [[http://www.ctan.org/tex-archive/macros/latex/contrib/listings/][listings]] or more recently with [[https://github.com/gpoore/minted][minted]]. The latter package uses Pygments to create beautiful code highlighting and includes fantastic additional features such as line numbering.

#+BEGIN_HTML
<!-- more -->
#+END_HTML

Minted's compatibility with the Latex beamer class, however, is restricted and some workarounds (as laid out by Tristan Ravitch in his [[http://nochair.net/posts/2011/05-05-fragile-latex-beamer.html][blog post]] are needed to assure full functionality of both the beamer class and minted.

#+BEGIN_HTML
<img src="{{ site.baseurl }}/assets/latex-beamer-minted.png" width="90%" style="display:block;margin:2em auto 2em;" />
#+END_HTML

Here's a [[https://raw.github.com/Felix11H/LaTeX/master/templates/beamer_syntaxhighlight.tex][template]] I made for anyone who wants to present code with the beamer class and the minted package, like in the image above:

#+BEGIN_SRC latex
\documentclass{beamer}
\usetheme{default}

\usepackage{minted}

\newminted{python}{fontsize=\scriptsize, 
		   linenos,
		   numbersep=8pt,
		   gobble=4,
		   frame=lines,
		   bgcolor=bg,
		   framesep=3mm} 
               		

\begin{document}

\definecolor{bg}{rgb}{0.95,0.95,0.95}

\defverbatim[colored]\exampleCode{
\begin{pythoncode}
               	
               	
    import numpy as np
    import pylab as pl

    def f_x(x):
      return np.exp(x)+x**2-5*x

    def approx_f(x):
      return 1 -4*x +3./2*x**2

    xvals = np.arange(-4,4,0.1)
    fx_vals = [f_x(x) for x in xvals]
    approx_vals = [approx_f(x) for x in xvals]

    pl.plot(xvals,fx_vals)
    pl.plot(xvals,approx_vals)

    pl.show()
    
    
\end{pythoncode}
}

\begin{frame}
\frametitle{Code example}
\exampleCode
\pause
Overlays work!
\end{frame}

\end{document}
#+END_SRC
